<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.w3school.com.cn"
           xmlns="http://www.w3school.com.cn"
           elementFormDefault="qualified">

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLschema"
           targetNamespace="http://www.w3school.com.cn"
           xmlns="http://www.w3school.com.cn"
           elementFormDefault="qualified" >


    <lastname>Smith</lastname>
    <age>28</age>
    <dateborn>1980-03-27</dateborn>

    <xs:element name="lastname" type="xs:string"/>
    <xs:element name="age" type="xs:integer"/>
    <xs:element name="dateborn" type="xs:date"/>

    <lastname>Smith</lastname>
    <age>28</age>
    <dateborn>1980-03-27</dateborn>

    <xs:element name="lastname" type="xs:string" />
    <xs:element name="age" type="xs:integer" />
    <xs:element name="dateborn" type="xs:date" />

    <lastname lang="EN">Smith</lastname>
    <xs:attribute name="lang" type="xs:string" />

    <xs:element name="age">

        <xs:simpleType>
            <xs:restriction base="xs:integer">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="120"/>
            </xs:restriction>
        </xs:simpleType>

    </xs:element>




    <xs:element name="age">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:minInclusive value="0" />
                <xs:maxInclusive value="120" />
            </xs:restriction>
        </xs:simpleType>
    </xs:element>


    <xs:element name="car">

        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="Audi"/>
                <xs:enumeration value="Golf"/>
                <xs:enumeration value="BMW"/>
            </xs:restriction>
        </xs:simpleType>

    </xs:element>


    <xs:element name="car">
        <xs:restriction base="xs:string">
            <xs:eumeration value="Audi" />
            <xs:enumeration value="Golf" />
            <xs:enumeration value="BMW" />
        </xs:restriction>
    </xs:element>

    <xs:element name="choice">

        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:pattern value="[xyz]"/>
            </xs:restriction>
        </xs:simpleType>

    </xs:element>


    <xs:element name="choice">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:pattern value="[xyz]" />
            </xs:restriction>
        </xs:simpleType>
    </xs:element>


    <xs:element name="address">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:whiteSpace value="preserve"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>

    <xs:element name="address">
        <xs:simpleType>
            <xs:restriction base="xs:string" >
                <xs:whiteSpace value="preserve" />
            </xs:restriction>
        </xs:simpleType>
    </xs:element>


    <description>
        It happened on <date lang="norwegian">03.03.99</date> ....
    </description>

    <description>
        It happened on <date lang="norwegian" >03.03.99</date>
    </description>


    <xs:element name="employee">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firstname" type="xs:string"/>
                <xs:element name="lastname" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>


    <xs:element name="employee">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firstname" type="xs:string" />
                <xs:element name="lastname" type="xs:string" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>


    <xs:element name="employee" type="personinfo"/>

    <xs:complexType name="personinfo">
        <xs:sequence>
            <xs:element name="firstname" type="xs:string"/>
            <xs:element name="lastname" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="personinfo">
        <xs:sequence>
            <xs:element name="firstname" type="xs:string" />
            <xs:element name="lastname" type="xs:string" />
        </xs:sequence>
    </xs:complexType>
    <xs:element name="employee" type="personinfo" />

    <xs:element name="employee" type="personinfo"/>
    <xs:element name="student" type="personinfo"/>
    <xs:element name="member" type="personinfo"/>

    <xs:complexType name="personinfo">
        <xs:sequence>
            <xs:element name="firstname" type="xs:string"/>
            <xs:element name="lastname" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>



    <xs:element name="person">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firstname" type="xs:string"/>
                <xs:element name="lastname" type="xs:string"/>
                <xs:any minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="person">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firstname" type="xs:string" />
                <xs:element name="lastname" type="xs:string" />
                <xs:any minOccurs="0" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>



    <xs:element name="children">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="childname" type="xs:string"
                            maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="children">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="childname" type="xs:string" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <person>
        <firstname>David</firstname>
        <lastname>Smith</lastname>
        <children>
            <childname>mike</childname>
        </children>
    </person>

    <person>
        <firstname>Tony</firstname>
        <lastname>Smith</lastname>
    </person>

    <person>
        <firstname>David</firstname>
        <lastname>Smith</lastname>
        <children>
            <childname>
                mike
            </childname>
            <childname>
                jerke
            </childname>
            <childname>
                Starlin
            </childname>
        </children>
    </person>

    <xs:element name="person">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firstname" type="xs:string"/>
                <xs:element name="lastname" type="xs:string"/>
            </xs:sequence>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="person">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firstname" type="xs:string" />
                <xs:element name="lastame" type="xs:string" />
            </xs:sequence>
            <xs:anyAttribute />
        </xs:complexType>
    </xs:element>

    <xs:attribute name="gender">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:pattern value="male|female"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:attribute>

    <xs:attribute name="gender">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:pattern value="male|female" />
            </xs:restriction>
        </xs:simpleType>
    </xs:attribute>


    <person gender="male">
        <firstname>David</firstname>
        <lastname>Smith</lastname>
    </person>

    <person gender="male">
        <firstname>David</firstname>
        <lastname>Smith</lastname>
    </person>

    <xs:element name="name" type="xs:string"/>
    <xs:element name="navn" substitutionGroup="name"/>

    <xs:element name="name" type="xs:string" />
    <xs:element name="navn" substitutionGroup="name" />

    <xs:complexType name="custinfo">
        <xs:sequence>
            <xs:element ref="name"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="custinfo">
        <xs:sequence>
            <xs:element ref="name" />
        </xs:sequence>
    </xs:complexType>

    <xs:element name="customer" type="custinfo"/>
    <xs:element name="kunde" substitutionGroup="customer"/>

    <xs:element name="customer" type="custinfo" />
    <xs:element name="kunde" substitutionGroup="customer" />

    <customer>
        <name>John Smith</name>
    </customer>

    <kunde>
        <navn>John Smith</navn>
    </kunde>

    <xs:element name="customer" type="xs:string"/>

    <xs:element name="customer" type="xs:string" />
    <customer> John Smith </customer>

    <xs:element name="start" type="xs:date"/>
    <start>2002-09-24</start>

    <xs:element name="start" type="xs:date" />
    <start>2002-09-24Z</start>

    <start>2002-09-24Z</start>

    <xs:element name="start" type="xs:time"/>
    <start>09:00:00</start>
    <start>09:30:10.5</start>

    <start>09:00:00</start>
    <start>09:30:10.5</start>

    <xs:element name="startdate" type="xs:dateTime"/>
    <startdate>2002-05-30T09:30:10.5</startdate>

    <startdate>2002-05-30T09:30:10.5</startdate>


    <xs:element name="prize" type="xs:decimal"/>
    <prize>999.50</prize>

    <xs:element name="prize" type="xs:decimal" />
    <prize>999.50</prize>

    <xs:attribute name="disabled" type="xs:boolean"/>
    <prize disabled="true">999</prize>

    <xs:attribute name="disabled" type="xs:boolean" />
    <prize disabled="true">999</prize>

    <xs:element name="blobsrc" type="xs:hexBinary"/>

    <xs:element name="blobsrc" type="xs:hexBinary" />

<!--    anyURI 数据类型用于规定 URI。
    下面是一个关于某个 scheme 中 anyURI 声明的例子：-->
    <xs:attribute name="src" type="xs:anyURI"/>
<!--    文档中的元素看上去应该类似这样：-->
    <pic src="http://www.w3school.com.cn/images/smiley.gif" />
<!--    注释：假如某个 URI 含有空格，请用 %20 替换它们。-->

    <xs:attribute name="src" type="xs:anyURI" />
    <pic src="http://www.w3school.com.cn/images/smiley.gif" />













